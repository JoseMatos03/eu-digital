Em primeiro lugar definir o tipo de ficheiros que queremos suportar, bem como os seus metadados e o manifesto a seguir a norma "BagIt"
Tendo isso feito, tanto frontoffice como backoffice podem começar a ser desenvolvidas. O backoffice tera de implementar a base de dados seguindo as normas de metadados e manifesto definidas. O backoffice terá tambem um ambiente de ficheiros dedicado, onde guardará o "payload". Serao tambem definidas APIs para pedidos ao backoffice, como inserção de dados, remoção de dados, etc.
Este backoffice terá tambem de ter um sistema de Logs, que imprimirá no ecra, bem como guardará em ficheiro os dados.
Este backoffice terá tembem de ter uma base de dados de utilizadores, com tambem API para manipular esses utilizadores.
Estas funcionalidades serão permitidas a partir de um administrador, pelo que vai haver necessidade de implementar autenticação.
Por fim, um frontoffice que permitirá login e interação com as APIs a partir de uma interface visual.

MARKDOWN:

# Plano de Projeto para o Desenvolvimento da Aplicação “Eu Digital”

Este documento descreve os passos essenciais para implementar o projeto de Engenharia Web, baseado na análise e na norma “BagIt” para o manifesto.

## 1. Definição dos Tipos de Ficheiros e Metadados

- **Seleção dos Tipos de Ficheiros Suportados:**
  - Determinar quais os formatos (imagens, textos, ficheiros multimédia, etc.) que serão aceites.
- **Definição dos Metadados:**
  - Identificar os campos necessários (ex.: data de criação, data de submissão, identificação do produtor, título, tipo de recurso, etc.).
- **Criação do Manifesto:**
  - Elaborar o manifesto conforme a norma “BagIt” (manifesto-SIP.json ou manifesto-SIP.xml) que descreva a estrutura dos ficheiros e os metadados.

## 2. Desenvolvimento do Backoffice

### 2.1. Base de Dados e Ambiente de Ficheiros

- **Implementação da Base de Dados:**
  - Estruturar o banco de dados (ex.: MongoDB) para guardar os metadados de acordo com a definição previamente estabelecida.
- **Criação do Ambiente de Ficheiros:**
  - Definir uma estrutura organizada no file system para armazenar o “payload” (ficheiros dos recursos), garantindo a ligação entre os ficheiros e os metadados.

### 2.2. Implementação das APIs do Backoffice

- **APIs para Gestão dos Recursos:**
  - Desenvolver endpoints para inserção, remoção e atualização dos dados (tanto dos ficheiros quanto dos metadados).
- **APIs para Gestão dos Utilizadores:**
  - Criar endpoints que permitam o registo, edição, listagem e remoção de utilizadores.

### 2.3. Sistema de Logs

- **Logs em Tempo Real e em Ficheiro:**
  - Implementar um sistema de logs que imprima os eventos no ecrã e, simultaneamente, os armazene num ficheiro para posterior consulta e análise.

### 2.4. Autenticação e Gestão de Acessos

- **Mecanismo de Autenticação:**
  - Integrar um sistema de autenticação (por exemplo, utilizando o Passport) para permitir o acesso restrito às funcionalidades de administração.
- **Controlo de Acessos:**
  - Definir e implementar os níveis de acesso para o administrador, garantindo a segurança e a integridade dos dados.

## 3. Desenvolvimento do Frontoffice

- **Interface de Login:**
  - Criar uma página de login que permita o acesso dos utilizadores à plataforma, autenticando-os através das APIs do backoffice.
- **Interface de Interação:**
  - Desenvolver uma interface visual que consuma as APIs do backoffice, permitindo aos utilizadores:
  - Visualizar e interagir com os conteúdos.
  - Realizar pesquisas e navegar na linha temporal dos recursos.
  - Executar operações de download (DIP) e partilha, conforme o design da aplicação.
